/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Queries;

import DatabaseManagement.DatabaseManager;
import General.Controller;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ViewBookingForm extends javax.swing.JFrame {

    DatabaseManager DB = DatabaseManager.getInstance();
    PreparedStatement pst;
    ResultSet rs;
    Controller controller;

    /**
     * Creates new form ViewBookingForm
     */
    public ViewBookingForm() {
        initComponents();
        controller = new Controller();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        textFieldSearch = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        ComboBoxFilter = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Submitbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewBookingTable = new javax.swing.JTable();
        ViewAllBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TopLabel.setBackground(new java.awt.Color(0, 0, 0));
        TopLabel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        TopLabel.setForeground(new java.awt.Color(255, 255, 255));
        TopLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TopLabel.setText("View Bookings");
        TopLabel.setOpaque(true);

        textFieldSearch.setToolTipText("");
        textFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSearchActionPerformed(evt);
            }
        });
        textFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldSearchKeyReleased(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setForeground(new java.awt.Color(0, 102, 0));
        jLabel25.setText("Please select filter for search and enter query then press submit:");

        ComboBoxFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ticket Number", "First Name", "Last Name", "Flight Number", "Gate Number" }));
        ComboBoxFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFilterActionPerformed(evt);
            }
        });

        jLabel26.setBackground(new java.awt.Color(204, 204, 204));
        jLabel26.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Filter Search Using:");
        jLabel26.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel26.setOpaque(true);

        jLabel27.setBackground(new java.awt.Color(204, 204, 204));
        jLabel27.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Search:");
        jLabel27.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel27.setOpaque(true);

        Submitbtn.setText("Submit");
        Submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitbtnActionPerformed(evt);
            }
        });

        ViewBookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ViewBookingTable.setEnabled(false);
        jScrollPane1.setViewportView(ViewBookingTable);

        ViewAllBtn.setText("View All");
        ViewAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAllBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Submitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ViewAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(Submitbtn)
                    .addComponent(ViewAllBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );

        textFieldSearch.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TopLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSearchActionPerformed

    private void ComboBoxFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxFilterActionPerformed

    private void textFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSearchKeyReleased

    }//GEN-LAST:event_textFieldSearchKeyReleased

    private void SubmitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitbtnActionPerformed

        try {
            String query = null;
            String search = textFieldSearch.getText();
            String filter = (String) ComboBoxFilter.getSelectedItem();
            String errorMessage = "";

            if (null != filter) {
                switch (filter) {
                    case "Ticket Number" ->
                        filter = "t.Num";
                    case "First Name" ->
                        filter = "p.FNAME";
                    case "Last Name" ->
                        filter = "p.LNAME";
                    case "Flight Number" ->
                        filter = "pl.FLIGHT_FNUMBER";
                    case "Gate Number" ->
                        filter = "f.GATES_GNUMBER";
                    default -> {
                    }
                }
            }

            if (search.isEmpty()) {
                controller.displayErrors("Search field is empty");
                return;
            }
            query = "select t.num , pa.SSN, p.fname, p.lname, p.age, pl.flight_fnumber, f.gates_gnumber, f.airplane_number, f.status, f.departure, f.arrival from PERSON p, PASSENGER pa, PERSON_FLIGHT pl, FLIGHT f, TICKET t where t.flight_fnumber = pl.flight_fnumber AND pl.flight_fnumber = f.fnumber AND pl.person_ssn = p.ssn AND t.passenger_ssn = pa.ssn AND p.ssn = pa.ssn AND ";
            if (filter != null) {
                if (filter.equals("f.GATES_GNUMBER")) {
                    if (!validGNum(search)) {
                        controller.displayErrors("Invalid Gate Number...Make sure its an integer");
                        return;
                    }
                    query += filter + " =" + search + "";

                } else {
                    query += filter + " ='" + search + "' ";
                }
            } else {
                controller.displayErrors("Filter is not selected!");
                return;
            }

            System.out.print(query);

            pst = DB.getConn().prepareStatement(query);
            rs = pst.executeQuery();

            String[] columnNames = {"Ticket Number", "SSN", "First Name", "Last Name", "Age", "Flight Number", "Gate Number", "Airplane Number", "Status", "Departure", "Arrival"};
            DefaultTableModel tblModel = new DefaultTableModel(columnNames, 0);

            ViewBookingTable.setModel(tblModel);

            while (rs.next()) {
                Object[] row = {rs.getObject("NUM"), rs.getObject("SSN"), rs.getObject("FNAME"), rs.getObject("LNAME"), rs.getObject("AGE"), rs.getObject("FLIGHT_FNUMBER"), rs.getObject("GATES_GNUMBER"), rs.getObject("AIRPLANE_NUMBER"), rs.getObject("STATUS"), rs.getObject("DEPARTURE"), rs.getObject("ARRIVAL")};
                tblModel.addRow(row);
            }

            switch (filter) {
                case "t.Num":
                    if (ViewBookingTable.getModel().getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "No such Ticket Number was found! All characters should be capitalized", "No Results", JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                case "p.FNAME":
                    if (ViewBookingTable.getModel().getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "No such First Name was found! Make sure first letter should be capitalized", "No Results", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                case "p.LNAME":
                    if (ViewBookingTable.getModel().getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "No such Last Name was found! Make sure first letter should be capitalized", "No Results", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                case "pl.FLIGHT_FNUMBER":
                    if (ViewBookingTable.getModel().getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "No such Flight Number was found!", "No Results", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                case "f.GATES_GNUMBER":
                    if (ViewBookingTable.getModel().getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "No such Gate Number was found!", "No Results", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
            }

            rs.close();
            pst.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_SubmitbtnActionPerformed

    private boolean validGNum(String search) {
        try {
            BigDecimal number = new BigDecimal(search);
        } catch (NumberFormatException ex) {
            return false;
        }
        return true;
    }
    private void ViewAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAllBtnActionPerformed

        try {
            String query = "select t.num , pa.SSN, p.fname, p.lname, p.age, pl.flight_fnumber, f.gates_gnumber, f.airplane_number, f.status, f.departure, f.arrival from PERSON p, PASSENGER pa, PERSON_FLIGHT pl, FLIGHT f, TICKET t where t.flight_fnumber = pl.flight_fnumber AND pl.flight_fnumber = f.fnumber AND pl.person_ssn = p.ssn AND t.passenger_ssn = pa.ssn AND p.ssn = pa.ssn";
            System.out.print(query);

            pst = DB.getConn().prepareStatement(query);
            rs = pst.executeQuery();

            String[] columnNames = {"Ticket Number", "SSN", "First Name", "Last Name", "Age", "Flight Number", "Gate Number", "Airplane Number", "Status", "Departure", "Arrival"};
            DefaultTableModel tblModel = new DefaultTableModel(columnNames, 0);
            ViewBookingTable.setModel(tblModel);

            while (rs.next()) {
                Object[] row = {rs.getObject("NUM"), rs.getObject("SSN"), rs.getObject("FNAME"), rs.getObject("LNAME"), rs.getObject("AGE"), rs.getObject("FLIGHT_FNUMBER"), rs.getObject("GATES_GNUMBER"), rs.getObject("AIRPLANE_NUMBER"), rs.getObject("STATUS"), rs.getObject("DEPARTURE"), rs.getObject("ARRIVAL")};
                tblModel.addRow(row);
            }
            rs.close();
            pst.close();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_ViewAllBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewBookingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxFilter;
    private javax.swing.JButton Submitbtn;
    private javax.swing.JLabel TopLabel;
    private javax.swing.JButton ViewAllBtn;
    private javax.swing.JTable ViewBookingTable;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textFieldSearch;
    // End of variables declaration//GEN-END:variables

}
