package Queries;

import General.Controller;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author is745
 */
public class Search extends javax.swing.JFrame {

    final Controller dbCon = new Controller();
    ResultSet rs;

    public Search() {
        initComponents();

        // center form in screen
        this.setLocationRelativeTo(null);
        lblFromError.setVisible(false);
        lblToError.setVisible(false);
        lblDepartureError.setVisible(false);
        lblArrivalError.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        txtFrom = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtDeparture = new javax.swing.JTextField();
        txtArrival = new javax.swing.JTextField();
        lblFromError = new javax.swing.JLabel();
        lblToError = new javax.swing.JLabel();
        lblDepartureError = new javax.swing.JLabel();
        lblArrivalError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(0, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Search Flight");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("to:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Departure date:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Arrival date:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("From:");

        txtTo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToActionPerformed(evt);
            }
        });

        txtFrom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "Airline", "Departure Airport", "Arrival Airport", "Departure Date", "Arrival Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        txtDeparture.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDeparture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartureActionPerformed(evt);
            }
        });

        txtArrival.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtArrival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArrivalActionPerformed(evt);
            }
        });

        lblFromError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblFromError.setForeground(new java.awt.Color(255, 0, 0));
        lblFromError.setText("error label");

        lblToError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblToError.setForeground(new java.awt.Color(255, 0, 0));
        lblToError.setText("error label");

        lblDepartureError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblDepartureError.setForeground(new java.awt.Color(255, 0, 0));
        lblDepartureError.setText("error label");

        lblArrivalError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblArrivalError.setForeground(new java.awt.Color(255, 0, 0));
        lblArrivalError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(385, 385, 385)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel8)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addComponent(lblFromError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblToError, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtArrival, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDepartureError, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblArrivalError, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArrival, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel3)
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFromError)
                            .addComponent(lblToError)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDepartureError)
                            .addComponent(lblArrivalError))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToActionPerformed

    private void txtFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromActionPerformed

    void clearErrorLabels() {
        lblFromError.setText("");
        lblFromError.setVisible(false);
        lblToError.setText("");
        lblToError.setVisible(false);
        lblDepartureError.setText("");
        lblDepartureError.setVisible(false);
        lblArrivalError.setText("");
        lblArrivalError.setVisible(false);

    }

    boolean isValidData() throws Exception {

        //Remove any existing error labels
        clearErrorLabels();

        //Assume data is valid unless it fails any of the conditions below
        boolean result = true;

        if (txtFrom.getText().trim().isEmpty() || (txtFrom.getText().trim().length() > 25)) {
            if (txtFrom.getText().trim().isEmpty()) {
                lblFromError.setText("Cannot be empty.");
            } else if ((txtFrom.getText().trim().length() > 25)) {
                lblFromError.setText("Must be < 25 chars.");
            }

            lblFromError.setVisible(true);
            result = false;
        }

        if (txtTo.getText().trim().isEmpty() || (txtTo.getText().trim().length() > 25)) {
            if (txtTo.getText().trim().isEmpty()) {
                lblToError.setText("Cannot be empty.");
            } else if ((txtTo.getText().trim().length() > 14)) {
                lblToError.setText("Must be < 25 chars.");
            }

            lblToError.setVisible(true);
            result = false;
        }

        if (txtDeparture.getText().trim().isEmpty()) {
            lblDepartureError.setText("Can't be empty");
            lblDepartureError.setVisible(true);
            result = false;
        } else {

            SimpleDateFormat format = new SimpleDateFormat("dd-MMM-yyyy");
            format.setLenient(false);
            try {
                format.parse(txtDeparture.getText().trim());
            } catch (ParseException ex) {
                throw new Exception("Invalid Date: must be in format dd-MMM-YYYY");
            }
        }

        if (txtArrival.getText().trim().isEmpty()) {
            lblArrivalError.setText("Can't be empty");
            lblArrivalError.setVisible(true);
            result = false;
        } else {

            SimpleDateFormat format = new SimpleDateFormat("dd-MMM-yyyy");
            format.setLenient(false);
            try {
                format.parse(txtArrival.getText().trim());
            } catch (ParseException ex) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return result;
    }

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {

            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            tblModel.setRowCount(0);

            String From = txtFrom.getText();
            String to = txtTo.getText();
            String Departure = txtDeparture.getText();
            String Arrival = txtArrival.getText();

            if (isValidData()) {

                String query = "SELECT Al.name, C1.NAME, C2.NAME, DEPARTURE, ARRIVAL, FNUMBER "
                        + "FROM Flight F "
                        + "JOIN AIRPORT A ON AIRPORT_INCOMING_CODE = A.CODE "
                        + "JOIN AIRPORT B ON AIRPORT_OUTCOMING_CODE2 = B.CODE "
                        + "JOIN CITY C1 ON A.CITY_CODE = C1.CODE "
                        + "JOIN CITY C2 ON B.CITY_CODE = C2.CODE "
                        + "JOIN Airline Al ON Airline_code = Al.Code "
                        + "WHERE C1.NAME = '" + From + "' "
                        + "AND C2.NAME = '" + to + "' "
                        + "AND Departure = '" + Departure + "' "
                        + "AND Arrival = '" + Arrival + "'";

                rs = dbCon.executeStatement(query);

                if (!rs.next()) {
                    javax.swing.JLabel label = new javax.swing.JLabel("No Flights avalible");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                }

                rs.beforeFirst();

                while (rs.next()) {
                    String Arline_Name = rs.getString(1).trim();
                    String Departure1 = rs.getString(2).trim();
                    String Arrival1 = rs.getString(3);
                    Date Departure_Airport = rs.getDate(4);
                    Date Arrival_Airport = rs.getDate(5);
                    String FN = rs.getString(6);

                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String departureDateString = dateFormat.format(Departure_Airport);
                    String ArrivalDateString = dateFormat.format(Arrival_Airport);

                    Object tbData[] = {FN, Arline_Name, Departure1, Arrival1, departureDateString, ArrivalDateString};

                    tblModel.addRow(tbData);

                }

            } else {
                dbCon.displayErrors("Please fix validation errors");
            }

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JLabel label = new javax.swing.JLabel(e.getMessage());
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtDepartureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartureActionPerformed

    private void txtArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArrivalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArrivalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblArrivalError;
    private javax.swing.JLabel lblDepartureError;
    private javax.swing.JLabel lblFromError;
    private javax.swing.JLabel lblToError;
    private javax.swing.JTextField txtArrival;
    private javax.swing.JTextField txtDeparture;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
